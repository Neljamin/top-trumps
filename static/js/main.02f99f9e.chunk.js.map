{"version":3,"sources":["styles/breakpoints.js","styles/theme.js","components/presentational/PlayArea/PlayArea.js","components/presentational/PlayArea/index.js","components/presentational/Card/iconMap.js","components/presentational/Card/CardDescription.js","components/presentational/Card/CardCategories.js","components/presentational/Card/CardBackFace.js","components/presentational/Card/Card.js","components/presentational/Card/index.js","components/presentational/GameBoard/GameBoard.js","components/presentational/GameBoard/index.js","state/GameState/actions.js","state/GameState/reducer.js","state/GameState/helpers.js","state/GameState/initialState.js","services/StarWarsDataService.js","state/GameState/GameState.js","components/container/GameBoardContainer/index.js","components/container/GameBoardContainer/GameBoardContainer.js","App.js","serviceWorker.js","index.js"],"names":["size","mobile","tablet","desktop","colors","gameState","win","text","background","lose","draw","unplayed","user","computer","StyledPlayArea","styled","div","theme","type","_","get","breakpoints","StyledPlayAreaScore","span","StyledPlayAreaScoreLabel","label","StyledPlayAreaScoreValue","PlayArea","children","score","StyledCardDescription","StyledCardDescriptionIcon","StyledCardDescriptionInfo","StyledCardDescriptionTitle","h1","CardDescription","title","info","className","iconMap","map","infoItem","index","key","defaultProps","StyledCardCategories","StyledCardCategory","button","props","stateProps","state","css","StyledCardCategoryLabel","StyledCardCategoryValue","CardCategories","categories","readonly","handleCategoryClick","selectedCategory","Object","entries","value","disabled","onClick","StyledCardBackFace","StyledCardBackFaceIcon","CardBackFace","StyledCard","show","StyledCardFace","StyledCardFrontface","StyledCardBackface","Card","data","STATE_MESSAGE","StyledGameBoard","SytledGameBoardStatus","GameBoard","propType","PropTypes","oneOf","setCards","cards","player","length","pop","firstHalf","secondHalf","forEach","card","push","splitCardsInHalf","sort","Math","random","shuffleCards","playerCards","computerCards","loading","allCards","showCard","currentCard","reducer","action","actions","category","playerState","computerState","playerAmount","computerAmount","request","then","response","starships","name","class","Speed","maxAtmospheringSpeed","Cost","costInCredits","Passengers","passengers","Films","films","GameStateContext","createContext","GameStateProvider","useReducer","initialState","dispatch","useEffect","a","starWarsDataService","getStarShips","Provider","GameBoardContainer","useContext","App","defaultTheme","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.02f99f9e.chunk.js","sourcesContent":["const size = {\n\tmobile: \"320px\",\n\ttablet: \"768px\",\n\tdesktop: \"1024px\",\n};\n\nexport default {\n\tmobile: `(min-width: ${size.mobile})`,\n\ttablet: `(min-width: ${size.tablet})`,\n\tdesktop: `(min-width: ${size.desktop})`,\n};\n","const colors = {\n\twhite: \"#ffffff\",\n\tblack: \"#000000\",\n\tred: \"#FF9AA2\",\n\tdarkRed: \"#8a0000\",\n\tdarkOrange: \"#FFB7B2\",\n\torange: \"#FFDAC1\",\n\tyellow: \"#FFFFD1\",\n\tlightGreen: \"#E2F0CB\",\n\tgreen: \"#B5EAD7\",\n\tdarkGreen: \"#546940\",\n\tblue: \"#a5d6f7\",\n};\n\nexport default {\n\tgameState: {\n\t\twin: {\n\t\t\ttext: colors.darkGreen,\n\t\t\tbackground: colors.green,\n\t\t},\n\t\tlose: {\n\t\t\ttext: colors.darkRed,\n\t\t\tbackground: colors.red,\n\t\t},\n\t\tdraw: {\n\t\t\ttext: colors.black,\n\t\t\tbackground: colors.yellow,\n\t\t},\n\t\tunplayed: {\n\t\t\ttext: colors.black,\n\t\t\tbackground: colors.white,\n\t\t},\n\t},\n\tuser: {\n\t\tbackground: colors.blue,\n\t},\n\tcomputer: {\n\t\tbackground: colors.orange,\n\t},\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport _ from \"lodash\";\n\nimport { breakpoints } from \"../../../styles\";\n\nconst StyledPlayArea = styled.div`\n\tdisplay: flex;\n\theight: 100%;\n\tposition: relative;\n\tjustify-content: center;\n\talign-items: center;\n\tbackground: ${({ theme, type }) =>\n\t\t_.get(theme, [type, \"background\"], \"white\")};\n\n\t@media ${breakpoints.tablet} {\n\t\tpadding: 0;\n\t\talign-items: center;\n\t}\n`;\n\nconst StyledPlayAreaScore = styled.span`\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tpadding: 8px;\n`;\n\nconst StyledPlayAreaScoreLabel = styled.label`\n\tfont-weight: 700;\n`;\n\nconst StyledPlayAreaScoreValue = styled.span`\n\tpadding: 0 8px;\n`;\n\nconst PlayArea = ({ children, type, score }) => (\n\t<StyledPlayArea type={type}>\n\t\t<StyledPlayAreaScore>\n\t\t\t<StyledPlayAreaScoreLabel>Score:</StyledPlayAreaScoreLabel>\n\t\t\t<StyledPlayAreaScoreValue>{score}</StyledPlayAreaScoreValue>\n\t\t</StyledPlayAreaScore>\n\t\t{children}\n\t</StyledPlayArea>\n);\n\nPlayArea.propTypes = {\n\ttype: PropTypes.string.isRequired,\n\tchildren: PropTypes.node,\n\tscore: PropTypes.number,\n};\n\nexport default PlayArea;\n","import PlayArea from \"./PlayArea\";\n\nexport default PlayArea;\n","export default {\n\tuser: \"fa-user\",\n\tcomputer: \"fa-robot\",\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport { breakpoints } from \"../../../styles\";\nimport iconMap from \"./iconMap\";\n\nconst StyledCardDescription = styled.div`\n\tdisplay: flex;\n`;\n\nconst StyledCardDescriptionIcon = styled.div`\n\theight: 32px;\n\twidth: 32px;\n\tfont-size: 32px;\n\n\t@media ${breakpoints.tablet} {\n\t\theight: 48px;\n\t\twidth: 48px;\n\t\tfont-size: 48px;\n\t}\n`;\n\nconst StyledCardDescriptionInfo = styled.div`\n\tpadding: 0 8px;\n\ttext-align: right;\n\tfont-size: 14px;\n`;\n\nconst StyledCardDescriptionTitle = styled.h1`\n\tfont-size: 14px;\n\tline-height: 16px;\n\tfont-weight: 600;\n`;\n\nconst CardDescription = ({ title, info, type }) => (\n\t<StyledCardDescription>\n\t\t<StyledCardDescriptionIcon>\n\t\t\t<i className={`fa ${iconMap[type]}`} />\n\t\t</StyledCardDescriptionIcon>\n\t\t<StyledCardDescriptionInfo>\n\t\t\t<StyledCardDescriptionTitle>{title}</StyledCardDescriptionTitle>\n\t\t\t{info.map((infoItem, index) => (\n\t\t\t\t<span key={index}>{infoItem}</span>\n\t\t\t))}\n\t\t</StyledCardDescriptionInfo>\n\t</StyledCardDescription>\n);\n\nCardDescription.propTypes = {\n\ttitle: PropTypes.string.isRequired,\n\tinfo: PropTypes.arrayOf(PropTypes.string),\n\ttype: PropTypes.oneOf(Object.keys(iconMap)).isRequired,\n};\n\nCardDescription.defaultProps = {\n\ttitle: \"\",\n\tinfo: [],\n};\n\nexport default CardDescription;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst StyledCardCategories = styled.div`\n\tpadding: 16px 0;\n`;\n\nconst StyledCardCategory = styled.button`\n\tdisplay: flex;\n\twidth: 100%;\n\tpadding: 4px 0;\n\tmargin-bottom: 2px;\n\tjustify-content: space-between;\n\tborder: 1px #ccc solid;\n\tbackground-color: white;\n\tcolor: black;\n\ttext-align: left;\n\n\t&:disabled {\n\t\tbackground-color: white;\n\t\tcolor: black;\n\t}\n\n\t${(props) => {\n\t\tconst stateProps = _.get(props, [\"theme\", \"gameState\", props.state], {});\n\t\treturn css`\n\t\t\tbackground-color: ${stateProps.background};\n\t\t\tcolor: ${stateProps.text};\n\n\t\t\t&:disabled {\n\t\t\t\tbackground-color: ${stateProps.background};\n\t\t\t\tcolor: ${stateProps.text};\n\t\t\t}\n\t\t`;\n\t}};\n`;\n\nconst StyledCardCategoryLabel = styled.div`\n\tpadding-left: 4px;\n`;\n\nconst StyledCardCategoryValue = styled.div`\n\twidth: auto;\n\tpadding-right: 4px;\n`;\n\nconst CardCategories = ({\n\tcategories,\n\treadonly,\n\thandleCategoryClick,\n\tstate,\n\tselectedCategory\n}) => (\n\t<StyledCardCategories>\n\t\t{Object.entries(categories).map(([key, value], index) => (\n\t\t\t<StyledCardCategory\n\t\t\t\tkey={index}\n\t\t\t\tdisabled={readonly}\n\t\t\t\tonClick={() => handleCategoryClick(key)}\n\t\t\t\tstate={selectedCategory === key && state}\n\t\t\t>\n\t\t\t\t<StyledCardCategoryLabel>{key}</StyledCardCategoryLabel>\n\t\t\t\t<StyledCardCategoryValue>{value}</StyledCardCategoryValue>\n\t\t\t</StyledCardCategory>\n\t\t))}\n\t</StyledCardCategories>\n);\n\nCardCategories.propTypes = {\n\tcategories: PropTypes.object,\n\treadonly: PropTypes.bool,\n\thandleCategoryClick: (props, propName) => {\n\t\tif (!props.readonly && !_.isFunction(props[propName])) {\n\t\t\tthrow new Error(\"handleCategoryClick must be provided if not readonly\");\n\t\t}\n\t},\n\tstate: PropTypes.oneOf([\"win\", \"lose\", \"draw\", \"unplayed\"]),\n\tselectedCategory: PropTypes.string,\n};\n\nCardCategories.defaultProps = {\n\tcategories: {},\n\treadonly: true,\n\tstate: \"unplayed\",\n\tselectedCategory: \"\",\n};\n\nexport default CardCategories;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport iconMap from \"./iconMap\";\n\nconst StyledCardBackFace = styled.div`\n\tdisplay: flex;\n\theight: 100%;\n\twidth: 100%;\n\talign-items: center;\n\tjustify-content: center;\n\tborder: 1px solid #ccc;\n\tborder-radius: 10px;\n`;\n\nconst StyledCardBackFaceIcon = styled.div`\n\tdisplay: flex;\n\theight: 128px;\n\twidth: 128px;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: 64px;\n\tbackground-color: #777;\n\tcolor: white;\n\tborder-radius: 50%;\n`;\n\nconst CardBackFace = ({ type }) => (\n\t<StyledCardBackFace>\n\t\t<StyledCardBackFaceIcon>\n\t\t\t<i className={`fa ${iconMap[type]}`} />\n\t\t</StyledCardBackFaceIcon>\n\t</StyledCardBackFace>\n);\n\nCardBackFace.propTypes = {\n\ttype: PropTypes.oneOf(Object.keys(iconMap)).isRequired,\n};\n\nexport default CardBackFace;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport { breakpoints } from \"../../../styles\";\nimport CardDescription from \"./CardDescription\";\nimport CardCategories from \"./CardCategories\";\nimport CardBackFace from \"./CardBackFace\";\n\nconst StyledCard = styled.div`\n\tposition: relative;\n\tdisplay: flex;\n\theight: 200px;\n\twidth: 100%;\n\tmax-width: 400px;\n\tmargin: 0 16px;\n\ttransform-style: preserve-3d;\n\ttransition: transform 0.6s;\n\ttransform: rotateY(${(props) => (props.show ? \"0deg\" : \"180deg\")});\n\n\t@media ${breakpoints.tablet} {\n\t\theight: 400px;\n\t\tmax-width: 270px;\n\t}\n`;\n\nconst StyledCardFace = styled.div`\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tdisplay: flex;\n\tbox-sizing: border-box;\n\tpadding: 16px;\n\theight: 100%;\n\twidth: 100%;\n\tflex-direction: column;\n\tbackface-visibility: hidden;\n\tbackground-color: white;\n\tborder-radius: 20px;\n\tbox-shadow: 8px 5px 0 rgba(0, 0, 0, 0.3), 11px 10px 0 rgba(0, 0, 0, 0.22);\n`;\n\nconst StyledCardFrontface = styled(StyledCardFace)``;\n\nconst StyledCardBackface = styled(StyledCardFace)`\n\ttransform: rotateY(180deg);\n`;\n\nconst Card = ({\n\ttype,\n\tdata,\n\tshow,\n\treadonly,\n\thandleCategoryClick,\n\tstate,\n\tselectedCategory,\n}) => (\n\t<StyledCard show={show}>\n\t\t<StyledCardFrontface>\n\t\t\t<CardDescription type={type} title={data.title} info={data.info} />\n\t\t\t<CardCategories\n\t\t\t\tstate={state}\n\t\t\t\treadonly={readonly}\n\t\t\t\tcategories={data.categories}\n\t\t\t\thandleCategoryClick={handleCategoryClick}\n\t\t\t\tselectedCategory={selectedCategory}\n\t\t\t/>\n\t\t</StyledCardFrontface>\n\t\t<StyledCardBackface>\n\t\t\t<CardBackFace type={type} />\n\t\t</StyledCardBackface>\n\t</StyledCard>\n);\n\nCard.propTypes = {\n\tshow: PropTypes.bool,\n\treadonly: PropTypes.bool,\n\thandleCategoryClick: PropTypes.func,\n\ttype: PropTypes.oneOf([\"user\", \"computer\"]),\n\tdata: PropTypes.shape({\n\t\ttitle: PropTypes.string,\n\t\tinfo: PropTypes.arrayOf(PropTypes.string),\n\t\tcategories: PropTypes.object,\n\t}),\n\tstate: PropTypes.oneOf([\"win\", \"lose\", \"draw\", \"unplayed\"]),\n\tselectedCategory: PropTypes.string,\n};\n\nCard.defaultProps = {\n\tshow: true,\n\treadonly: true,\n\ttype: \"user\",\n\tdata: {\n\t\ttitle: \"\",\n\t\tcategories: {},\n\t\tinfo: [],\n\t},\n};\n\nexport default Card;\n","import Card from \"./Card\";\n\nexport default Card;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nimport { breakpoints } from \"../../../styles\";\n\nconst STATE_MESSAGE = {\n\tunplayed: \"?\",\n\twin: \"You Win!\",\n\tlose: \"You Lose!\",\n\tdraw: \"You Draw!\",\n};\n\nconst StyledGameBoard = styled.div`\n\tdisplay: flex;\n\tposition: relative;\n\tflex-direction: column;\n\theight: 100vh;\n\twidth: 100vw;\n\n\t@media ${breakpoints.tablet} {\n\t\tflex-direction: row;\n\t}\n`;\n\nconst SytledGameBoardStatus = styled.span`\n\tposition: absolute;\n\tdisplay: flex;\n\theight: 64px;\n\twidth: 64px;\n\ttop: calc(50% - 32px);\n\tleft: calc(50% - 32px);\n\tjustify-content: center;\n\talign-items: center;\n\ttext-align: center;\n\tborder: 1px solid #ccc;\n\tborder-radius: 50%;\n\tfont-weight: 500;\n\tbox-shadow: 1px 1px 0 rgba(0, 0, 0, 0.3), 2px 2px 0 rgba(0, 0, 0, 0.22);\n\n\t${(props) => {\n\t\tconst stateProps = _.get(props, [\"theme\", \"gameState\", props.state], {});\n\t\treturn css`\n\t\t\tbackground-color: ${stateProps.background};\n\t\t\tcolor: ${stateProps.text};\n\t\t`;\n\t}};\n`;\n\nconst GameBoard = ({ children, state }) => (\n\t<StyledGameBoard>\n\t\t{children}\n\t\t<SytledGameBoardStatus state={state}>\n\t\t\t{STATE_MESSAGE[state]}\n\t\t</SytledGameBoardStatus>\n\t</StyledGameBoard>\n);\n\nGameBoard.propType = {\n\tstate: PropTypes.oneOf([\"win\", \"lose\", \"draw\", \"unplayed\"]),\n};\n\nGameBoard.defaultProps = {\n\tstate: \"unplayed\",\n};\n\nexport default GameBoard;\n","import GameBoard from \"./GameBoard\";\n\nexport default GameBoard;\n","export default {\n\tHANDLE_CATEGORY_CLICK: \"HANDLE_CATEGORY_CLICK\",\n\tSET_CARDS: \"SET_CARDS\",\n};\n","import actions from \"./actions\";\nimport { shuffleCards, splitCardsInHalf } from \"./helpers\";\n\nconst setCards = (state, cards) => {\n\tconst { player, computer } = state;\n\tconst shuffledCards = shuffleCards(cards);\n\tconst [playerCards, computerCards] = splitCardsInHalf(shuffledCards);\n\treturn {\n\t\t...state,\n\t\tloading: false,\n\t\tallCards: cards,\n\t\tplayer: {\n\t\t\t...player,\n\t\t\treadonly: false,\n\t\t\tshowCard: true,\n\t\t\tcurrentCard: playerCards[0],\n\t\t\tcards: playerCards,\n\t\t},\n\t\tcomputer: {\n\t\t\t...computer,\n\t\t\treadonly: true,\n\t\t\tcurrentCard: computerCards[0],\n\t\t\tcards: computerCards,\n\t\t},\n\t};\n};\n\nconst handleCategoryClick = (state, category) => {\n\tconst { player, computer } = state;\n\tconst playerAmount = player.currentCard.categories[category];\n\tconst computerAmount = computer.currentCard.categories[category];\n\tlet playerState;\n\tlet computerState;\n\tif (playerAmount < computerAmount) {\n\t\tplayerState = \"lose\";\n\t\tcomputerState = \"win\";\n\t} else if (playerAmount > computerAmount) {\n\t\tplayerState = \"win\";\n\t\tcomputerState = \"lose\";\n\t} else {\n\t\tplayerState = \"draw\";\n\t\tcomputerState = \"draw\";\n\t}\n\treturn {\n\t\t...state,\n\t\tplayer: {\n\t\t\t...player,\n\t\t\treadonly: true,\n\t\t\tstate: playerState,\n\t\t},\n\t\tcomputer: {\n\t\t\t...computer,\n\t\t\tshowCard: true,\n\t\t\tstate: computerState,\n\t\t},\n\t\tselectedCategory: category,\n\t};\n};\n\nexport default function reducer(state, action) {\n\tswitch (action.type) {\n\t\tcase actions.SET_CARDS:\n\t\t\treturn setCards(state, action.value);\n\t\tcase actions.HANDLE_CATEGORY_CLICK:\n\t\t\treturn handleCategoryClick(state, action.value);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","export const shuffleCards = (cards) => cards.sort(() => Math.random() - 0.5);\nexport const splitCardsInHalf = (cards) => {\n\tif (cards.length % 2 === 1) {\n\t\tcards.pop();\n\t}\n\tconst firstHalf = [];\n\tconst secondHalf = [];\n\n\tcards.forEach((card, index) => {\n\t\tif (index % 2 === 0) {\n\t\t\tfirstHalf.push(card);\n\t\t} else {\n\t\t\tsecondHalf.push(card);\n\t\t}\n\t});\n\n\treturn [firstHalf, secondHalf];\n};\n","export default {\n\tloading: true,\n\tallCards: [],\n\tplayer: {\n\t\tshowCard: false,\n\t\treadonly: false,\n\t\tcards: [],\n\t},\n\tcomputer: {\n\t\tshowCard: false,\n\t\treadonly: true,\n\t\tcards: [],\n\t},\n};\n","import request from \"graphql-request\";\n\nconst BASE_URL =\n\t\"https://api-euwest.graphcms.com/v1/ck5wca13qc9ux01fgaidt12m4/master\";\n\nclass StarWarsDataService {\n\tgetStarShips() {\n\t\tconst query = `{\n\t\t\tstarships {\n\t\t\t\tname,\n\t\t\t\tclass,\n\t\t\t\tmaxAtmospheringSpeed,\n\t\t\t\tcostInCredits,\n\t\t\t\tpassengers,\n\t\t\t\tfilms {\n\t\t\t\t\ttitle\n\t\t\t\t}\n\t\t\t}\n\t\t}`;\n\n\t\treturn request(BASE_URL, query).then((response) =>\n\t\t\tresponse.starships.map(\n\t\t\t\t({\n\t\t\t\t\tname,\n\t\t\t\t\tclass: starshipClass,\n\t\t\t\t\tmaxAtmospheringSpeed,\n\t\t\t\t\tcostInCredits,\n\t\t\t\t\tpassengers,\n\t\t\t\t\tfilms,\n\t\t\t\t}) => ({\n\t\t\t\t\ttitle: name,\n\t\t\t\t\tinfo: [starshipClass],\n\t\t\t\t\tcategories: {\n\t\t\t\t\t\tSpeed: maxAtmospheringSpeed || 0,\n\t\t\t\t\t\tCost: costInCredits || 0,\n\t\t\t\t\t\tPassengers: passengers || 0,\n\t\t\t\t\t\tFilms: films.length,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\t}\n}\n\nexport default new StarWarsDataService();\n","import React, { useEffect, useReducer, createContext } from \"react\";\n\nimport reducer from \"./reducer\";\nimport initialState from \"./initialState\";\nimport actions from \"./actions\";\nimport { starWarsDataService } from \"../../services\";\n\nexport const GameStateContext = createContext({});\n\nexport function GameStateProvider({ children }) {\n\tconst [state, dispatch] = useReducer(reducer, initialState);\n\n\tconst value = {\n\t\tloading: state.loading,\n\t\tallCards: state.allCards,\n\t\tplayer: state.player,\n\t\tcomputer: state.computer,\n\t\tselectedCategory: state.selectedCategory,\n\t\tsetCards: (value) => dispatch({ type: actions.SET_CARDS, value }),\n\t\thandleCategoryClick: (value) => dispatch({ type: actions.HANDLE_CATEGORY_CLICK, value }),\n\t};\n\n\tuseEffect(() => {\n\t\t(async function loadCards() {\n\t\t\tconst cards = await starWarsDataService.getStarShips();\n\t\t\tvalue.setCards(cards);\n\t\t})();\n\t}, []);\n\n\treturn (\n\t\t<GameStateContext.Provider value={value}>\n\t\t\t{children}\n\t\t</GameStateContext.Provider>\n\t);\n}\n","import GameBoardContainer from \"./GameBoardContainer\";\n\nexport default GameBoardContainer;\n","import React, { useContext } from \"react\";\nimport _ from \"lodash\";\n\nimport { PlayArea, Card, GameBoard } from \"../../presentational\";\nimport { GameStateContext } from \"../../../state\";\n\nexport default function GameBoardContainer() {\n\tconst {\n\t\tloading,\n\t\tplayer,\n\t\tcomputer,\n\t\thandleCategoryClick,\n\t\tallCards,\n\t\tselectedCategory,\n\t} = useContext(GameStateContext);\n\n\tif (loading) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<GameBoard state={player.state}>\n\t\t\t<PlayArea type=\"user\" score={player.cards.length}>\n\t\t\t\t<Card\n\t\t\t\t\tshow={player.showCard}\n\t\t\t\t\tstate={player.state}\n\t\t\t\t\ttype=\"user\"\n\t\t\t\t\tdata={player.currentCard}\n\t\t\t\t\thandleCategoryClick={handleCategoryClick}\n\t\t\t\t\treadonly={player.readonly}\n\t\t\t\t\tselectedCategory={selectedCategory}\n\t\t\t\t></Card>\n\t\t\t</PlayArea>\n\t\t\t<PlayArea type=\"computer\" score={computer.cards.length}>\n\t\t\t\t<Card\n\t\t\t\t\tshow={computer.showCard}\n\t\t\t\t\tstate={computer.state}\n\t\t\t\t\ttype=\"computer\"\n\t\t\t\t\tdata={computer.currentCard}\n\t\t\t\t\treadonly={true}\n\t\t\t\t\tselectedCategory={selectedCategory}\n\t\t\t\t></Card>\n\t\t\t</PlayArea>\n\t\t</GameBoard>\n\t);\n}\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport { theme as defaultTheme } from \"./styles\";\nimport { GameBoardContainer } from \"./components/container\";\nimport { GameStateProvider } from \"./state\";\n\nconst App = () => (\n\t<ThemeProvider theme={defaultTheme}>\n\t\t<GameStateProvider>\n\t\t\t<GameBoardContainer />\n\t\t</GameStateProvider>\n\t</ThemeProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { \"Service-Worker\": \"script\" },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./reset.scss\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}