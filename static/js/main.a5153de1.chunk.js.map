{"version":3,"sources":["styles/breakpoints.js","styles/theme.js","components/PlayArea/PlayArea.js","components/PlayArea/index.js","components/Card/CardDescription.js","components/Card/CardCategories.js","components/Card/Card.js","components/Card/index.js","components/GameBoard/GameBoard.js","components/GameBoard/index.js","App.js","serviceWorker.js","index.js"],"names":["size","mobile","tablet","desktop","colors","gameState","win","text","background","lose","draw","unplayed","user","computer","StyledPlayArea","styled","div","theme","type","_","get","props","top","position","css","breakpoints","StyledPlayAreaScore","span","StyledPlayAreaScoreLabel","label","StyledPlayAreaScoreValue","PlayArea","children","score","ICON_MAP","StyledCardDescription","StyledCardDescriptionIcon","StyledCardDescriptionInfo","StyledCardDescriptionTitle","h1","CardDescription","title","info","className","map","infoItem","index","key","StyledCardCategories","StyledCardCategory","StyledCardCategoryLabel","StyledCardCategoryValue","CardCategories","categories","category","value","defaultProps","StyledCard","Card","STATE_MESSAGE","StyledGameBoard","SytledGameBoardStatus","stateProps","state","GameBoard","propType","PropTypes","oneOf","dummyUserCardData","dummyComputerCardData","App","defaultTheme","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a5153de1.chunk.js","sourcesContent":["const size = {\n\tmobile: \"320px\",\n\ttablet: \"768px\",\n\tdesktop: \"1024px\",\n};\n\nexport default {\n\tmobile: `(min-width: ${size.mobile})`,\n\ttablet: `(min-width: ${size.tablet})`,\n\tdesktop: `(min-width: ${size.desktop})`,\n};\n","const colors = {\n\twhite: \"#ffffff\",\n\tblack: \"#000000\",\n\tred: \"#FF9AA2\",\n\tdarkOrange: \"#FFB7B2\",\n\torange: \"#FFDAC1\",\n\tyellow: \"#FFFFD1\",\n\tlightGreen: \"#E2F0CB\",\n\tgreen: \"#B5EAD7\",\n\tblue: \"#a5d6f7\",\n};\n\nexport default {\n\tgameState: {\n\t\twin: {\n\t\t\ttext: colors.white,\n\t\t\tbackground: colors.green,\n\t\t},\n\t\tlose: {\n\t\t\ttext: colors.white,\n\t\t\tbackground: colors.red,\n\t\t},\n\t\tdraw: {\n\t\t\ttext: colors.black,\n\t\t\tbackground: colors.yellow,\n\t\t},\n\t\tunplayed: {\n\t\t\ttext: colors.black,\n\t\t\tbackground: colors.white,\n\t\t},\n\t},\n\tuser: {\n\t\tbackground: colors.blue,\n\t},\n\tcomputer: {\n\t\tbackground: colors.orange,\n\t},\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled, { css } from \"styled-components\";\nimport _ from \"lodash\";\n\nimport { breakpoints } from \"../../styles\";\n\nconst StyledPlayArea = styled.div`\n\tdisplay: flex;\n\theight: 100%;\n\tposition: relative;\n\tjustify-content: center;\n\tbackground: ${({ theme, type }) =>\n\t\t_.get(theme, [type, \"background\"], \"white\")};\n\n\t${(props) => {\n\t\tconst top = props.position === \"top\";\n\t\treturn css`\n\t\t\talign-items: ${top ? \"flex-end\" : \"flex-start\"};\n\t\t\tpadding-bottom: ${top ? \"50px\" : \"0px\"};\n\t\t\tpadding-top: ${top ? \"0px\" : \"50px\"};\n\t\t`;\n\t}};\n\n\t@media ${breakpoints.tablet} {\n\t\tpadding: 0;\n\t\talign-items: center;\n\t}\n`;\n\nconst StyledPlayAreaScore = styled.span`\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tpadding: 8px;\n`;\n\nconst StyledPlayAreaScoreLabel = styled.label`\n\tfont-weight: 700;\n`;\n\nconst StyledPlayAreaScoreValue = styled.span`\n\tpadding: 0 8px;\n`;\n\nconst PlayArea = ({ children, type, score, position }) => (\n\t<StyledPlayArea type={type} position={position}>\n\t\t<StyledPlayAreaScore>\n\t\t\t<StyledPlayAreaScoreLabel>Score:</StyledPlayAreaScoreLabel>\n\t\t\t<StyledPlayAreaScoreValue>{score}</StyledPlayAreaScoreValue>\n\t\t</StyledPlayAreaScore>\n\t\t{children}\n\t</StyledPlayArea>\n);\n\nPlayArea.propTypes = {\n\ttype: PropTypes.string.isRequired,\n\tchildren: PropTypes.node,\n\tposition: PropTypes.oneOf([\"top\", \"bottom\"]).isRequired,\n};\n\nexport default PlayArea;\n","import PlayArea from \"./PlayArea\";\n\nexport default PlayArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport { breakpoints } from \"../../styles\";\n\nconst ICON_MAP = {\n\tuser: \"fa-user\",\n\tcomputer: \"fa-robot\",\n};\n\nconst StyledCardDescription = styled.div`\n\tdisplay: flex;\n\tpadding: 8px 0;\n`;\n\nconst StyledCardDescriptionIcon = styled.div`\n\theight: 32px;\n\twidth: 32px;\n\tfont-size: 32px;\n\n\t@media ${breakpoints.tablet} {\n\t\theight: 48px;\n\t\twidth: 48px;\n\t\tfont-size: 48px;\n\t}\n`;\n\nconst StyledCardDescriptionInfo = styled.div`\n\tpadding: 0 8px;\n\ttext-align: right;\n`;\n\nconst StyledCardDescriptionTitle = styled.h1`\n\tfont-size: 24px;\n\tfont-weight: 600;\n`;\n\nconst CardDescription = ({ title, info, type }) => (\n\t<StyledCardDescription>\n\t\t<StyledCardDescriptionIcon>\n\t\t\t<i className={`fa ${ICON_MAP[type]}`} />\n\t\t</StyledCardDescriptionIcon>\n\t\t<StyledCardDescriptionInfo>\n\t\t\t<StyledCardDescriptionTitle>{title}</StyledCardDescriptionTitle>\n\t\t\t{info.map((infoItem, index) => (\n\t\t\t\t<span key={index}>{infoItem}</span>\n\t\t\t))}\n\t\t</StyledCardDescriptionInfo>\n\t</StyledCardDescription>\n);\n\nCardDescription.propTypes = {\n\ttitle: PropTypes.string.isRequired,\n\tinfo: PropTypes.arrayOf(PropTypes.string),\n\ttype: PropTypes.oneOf([\"user\", \"computer\"]).isRequired,\n};\n\nexport default CardDescription;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledCardCategories = styled.div`\n\tpadding: 16px 0;\n`;\n\nconst StyledCardCategory = styled.div`\n\tdisplay: flex;\n    padding: 4px 0;\n    margin-bottom: 2px;\n\tjustify-content: space-between;\n\tborder: 1px #ccc solid;\n`;\n\nconst StyledCardCategoryLabel = styled.div`\n\tdisplay: block;\n\tpadding-left: 4px;\n`;\n\nconst StyledCardCategoryValue = styled.div`\n\twidth: auto;\n\tpadding-right: 4px;\n`;\n\nconst CardCategories = ({ categories }) => (\n\t<StyledCardCategories>\n\t\t{categories.map((category, index) => (\n\t\t\t<StyledCardCategory key={index}>\n\t\t\t\t<StyledCardCategoryLabel>\n\t\t\t\t\t{category.label}\n\t\t\t\t</StyledCardCategoryLabel>\n\t\t\t\t<StyledCardCategoryValue>\n\t\t\t\t\t{category.value}\n\t\t\t\t</StyledCardCategoryValue>\n\t\t\t</StyledCardCategory>\n\t\t))}\n\t</StyledCardCategories>\n);\n\nCardCategories.defaultProps = {\n\tcategories: [],\n};\n\nexport default CardCategories;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport { breakpoints } from \"../../styles\";\nimport CardDescription from \"./CardDescription\";\nimport CardCategories from \"./CardCategories\";\n\nexport const StyledCard = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex: 1 0 0;\n\theight: 200px;\n\twidth: 100%;\n\tpadding: 0 16px;\n\tmargin: 0 16px;\n\tmax-width: 400px;\n\tborder-radius: 20px;\n\tbackground-color: white;\n\tborder: 1px solid #ccc;\n\tbox-shadow: 8px 5px 0 rgba(0, 0, 0, 0.3), 11px 10px 0 rgba(0, 0, 0, 0.22);\n\n\t@media ${breakpoints.tablet} {\n\t\theight: 400px;\n\t\tmax-width: 250px;\n\t}\n`;\n\nconst Card = ({ type, title, info, categories }) => (\n\t<StyledCard>\n\t\t<CardDescription type={type} title={title} info={info} />\n\t\t<CardCategories categories={categories} />\n\t</StyledCard>\n);\n\nCard.propTypes = {\n\ttype: PropTypes.oneOf([\"user\", \"computer\"]),\n\ttitle: PropTypes.string,\n\tinfo: PropTypes.arrayOf(PropTypes.string),\n};\n\nCard.defaultProps = {\n\ttype: \"user\",\n\tcategories: [],\n\tinfo: [],\n};\n\nexport default Card;\n","import Card from \"./Card\";\n\nexport default Card;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nimport { breakpoints } from \"../../styles\";\n\nconst STATE_MESSAGE = {\n\tunplayed: \"?\",\n\twin: \"You Win!\",\n\tlose: \"You Lose!\",\n\tdraw: \"You Draw!\",\n};\n\nconst StyledGameBoard = styled.div`\n\tdisplay: flex;\n\tposition: relative;\n\tflex-direction: column;\n\theight: 100vh;\n\twidth: 100vw;\n\n\t@media ${breakpoints.tablet} {\n\t\tflex-direction: row;\n\t}\n`;\n\nconst SytledGameBoardStatus = styled.span`\n\tposition: absolute;\n\tdisplay: flex;\n\theight: 64px;\n\twidth: 64px;\n\ttop: calc(50% - 32px);\n\tleft: calc(50% - 32px);\n\tjustify-content: center;\n\talign-items: center;\n\ttext-align: center;\n\tborder: 1px solid #ccc;\n\tborder-radius: 50%;\n\tfont-weight: 900;\n\tbox-shadow: 1px 1px 0 rgba(0, 0, 0, 0.3), 2px 2px 0 rgba(0, 0, 0, 0.22);\n\n\t${(props) => {\n\t\tconst stateProps = _.get(props, [\"theme\", \"gameState\", props.state]);\n\n\t\treturn css`\n\t\t\tbackground-color: ${stateProps.background};\n\t\t\tcolor: ${stateProps.text};\n\t\t`;\n\t}};\n`;\n\nconst GameBoard = ({ children, state }) => (\n\t<StyledGameBoard>\n\t\t{children}\n\t\t<SytledGameBoardStatus state={state}>\n\t\t\t{STATE_MESSAGE[state]}\n\t\t</SytledGameBoardStatus>\n\t</StyledGameBoard>\n);\n\nGameBoard.propType = {\n\tstate: PropTypes.oneOf([\"win\", \"lose\", \"draw\", \"unplayed\"]),\n};\n\nGameBoard.defaultProps = {\n\tstate: \"unplayed\",\n};\n\nexport default GameBoard;\n","import GameBoard from \"./GameBoard\";\n\nexport default GameBoard;\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport { theme as defaultTheme } from \"./styles\";\nimport { PlayArea, Card, GameBoard } from \"./components\";\n\nconst dummyUserCardData = {\n\ttitle: \"CR90 corvette\",\n\tinfo: [\"corvette\"],\n\tcategories: [\n\t\t{\n\t\t\tlabel: \"Max Speed\",\n\t\t\tvalue: \"950\",\n\t\t},\n\t\t{\n\t\t\tlabel: \"Cost in Credits\",\n\t\t\tvalue: \"3500000\",\n\t\t},\n\t\t{\n\t\t\tlabel: \"Passengers\",\n\t\t\tvalue: \"600\",\n\t\t},\n\t\t{\n\t\t\tlabel: \"Number of Films\",\n\t\t\tvalue: \"3\",\n\t\t},\n\t],\n};\n\nconst dummyComputerCardData = {\n\ttitle: \"???\",\n\tinfo: [\"???\"],\n\tcategories: [\n\t\t{\n\t\t\tlabel: \"Max Speed\",\n\t\t\tvalue: \"???\",\n\t\t},\n\t\t{\n\t\t\tlabel: \"Cost in Credits\",\n\t\t\tvalue: \"???\",\n\t\t},\n\t\t{\n\t\t\tlabel: \"Passengers\",\n\t\t\tvalue: \"???\",\n\t\t},\n\t\t{\n\t\t\tlabel: \"Number of Films\",\n\t\t\tvalue: \"???\",\n\t\t},\n\t],\n};\n\nconst App = () => (\n\t<ThemeProvider theme={defaultTheme}>\n\t\t<GameBoard>\n\t\t\t<PlayArea type=\"user\" score=\"5\" position=\"top\">\n\t\t\t\t<Card\n\t\t\t\t\ttype=\"user\"\n\t\t\t\t\ttitle={dummyUserCardData.title}\n\t\t\t\t\tinfo={dummyUserCardData.info}\n\t\t\t\t\tcategories={dummyUserCardData.categories}\n\t\t\t\t></Card>\n\t\t\t</PlayArea>\n\t\t\t<PlayArea type=\"computer\" score=\"3\" position=\"bottom\">\n\t\t\t\t<Card\n\t\t\t\t\ttype=\"computer\"\n\t\t\t\t\ttitle={dummyComputerCardData.title}\n\t\t\t\t\tinfo={dummyComputerCardData.info}\n\t\t\t\t\tcategories={dummyComputerCardData.categories}\n\t\t\t\t></Card>\n\t\t\t</PlayArea>\n\t\t</GameBoard>\n\t</ThemeProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { \"Service-Worker\": \"script\" },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./reset.scss\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}